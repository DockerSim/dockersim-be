package com.dockersim.service;

import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

@Component
public class DockerHelpRenderer {
    Map<String, Set<String>> validCommands = new HashMap<String, Set<String>>();
    public String renderFullHelp() {
        return String.join("\n",
                "Common Commands:",
                "  run         이미지로부터 새 컨테이너를 생성하고 실행",
                "  exec        실행 중인 컨테이너에서 명령어 실행",
                "  ps          컨테이너 목록 보기",
                "  build       Dockerfile을 이용해 이미지 빌드",
                "  pull        레지스트리에서 이미지 다운로드",
                "  push        레지스트리에 이미지 업로드",
                "  images      로컬 이미지 목록 보기",
                "  login       레지스트리에 로그인",
                "  logout      레지스트리에서 로그아웃",
                "  search      Docker Hub에서 이미지 검색",
                "  version     Docker 버전 정보 보기",
                "  info        시스템 전체 정보 보기",
                "",
                "Management Commands:",
                "  builder     빌드 관리",
                "  buildx*     Docker Buildx 확장",
                "  checkpoint  컨테이너 체크포인트 관리",
                "  compose*    Docker Compose 명령어 모음",
                "  container   컨테이너 관리",
                "  context     컨텍스트 관리",
                "  image       이미지 관리",
                "  manifest    Docker 이미지 매니페스트 및 매니페스트 목록 관리",
                "  network     네트워크 관리",
                "  plugin      플러그인 관리",
                "  scout*      Docker Scout",
                "  system      Docker 시스템 관리",
                "  trust       Docker 이미지에 대한 신뢰 설정 관리",
                "  volume      볼륨 관리",
                "",
                "Swarm Commands:",
                "  swarm       Swarm 클러스터 관리",
                "",
                "Commands:",
                "  attach      실행 중인 컨테이너에 로컬 표준 입출력 연결",
                "  commit      컨테이너 변경 사항을 새 이미지로 커밋",
                "  cp          컨테이너와 로컬 파일 시스템 간 파일 복사",
                "  create      새 컨테이너 생성",
                "  diff        컨테이너 파일 시스템의 변경 사항 확인",
                "  events      서버에서 발생하는 이벤트 실시간 보기",
                "  export      컨테이너 파일 시스템을 tar 아카이브로 내보내기",
                "  history     이미지의 생성 히스토리 확인",
                "  import      tar 아카이브에서 이미지 가져오기",
                "  inspect     도커 오브젝트에 대한 상세 정보 출력",
                "  kill        실행 중인 컨테이너 강제 종료",
                "  load        tar 또는 STDIN 으로부터 이미지 로드",
                "  logs        컨테이너 로그 출력",
                "  pause       하나 이상의 컨테이너를 일시 정지",
                "  port        포트 매핑 확인",
                "  rename      컨테이너 이름 변경",
                "  restart     컨테이너 재시작",
                "  rm          하나 이상의 컨테이너 삭제",
                "  rmi         하나 이상의 이미지 삭제",
                "  save        하나 이상의 이미지를 tar 아카이브로 저장 (기본은 STDOUT 스트리밍)",
                "  start       하나 이상의 중지된 컨테이너 시작",
                "  stats       컨테이너 리소스 사용량 실시간 보기",
                "  stop        하나 이상의 실행 중인 컨테이너 중지",
                "  tag         SOURCE_IMAGE에 TARGET_IMAGE 태그 생성",
                "  top         컨테이너에서 실행 중인 프로세스 보기",
                "  unpause     일시 정지된 컨테이너 재개",
                "  update      컨테이너 설정 변경",
                "  wait        하나 이상의 컨테이너가 종료될 때까지 대기 후 종료 코드 반환",
                "",
                "Global Options:",
                "  --config string           클라이언트 설정 파일 경로 (기본값: \"/root/.docker\")",
                "  -c, --context string      사용할 컨텍스트 이름 (DOCKER_HOST/env/context 우선 순위 적용)",
                "  -D, --debug               디버그 모드 활성화",
                "  -H, --host list           연결할 데몬 호스트 주소",
                "  -l, --log-level string    로깅 레벨 설정 (\"debug\", \"info\", \"warn\", \"error\", \"fatal\") (기본값: \"info\")",
                "      --tls                 TLS 사용 (기본적으로 --tlsverify 포함됨)",
                "      --tlscacert string    TLS CA 인증서 파일 경로 (기본: \"/root/.docker/ca.pem\")",
                "      --tlscert string      TLS 클라이언트 인증서 파일 경로 (기본: \"/root/.docker/cert.pem\")",
                "      --tlskey string       TLS 클라이언트 키 파일 경로 (기본: \"/root/.docker/key.pem\")",
                "      --tlsverify           TLS 및 서버 인증서 검증 사용",
                "  -v, --version             버전 정보 출력 후 종료",
                "",
                "'docker 명령어 --help'를 실행하면 각 명령어에 대한 더 많은 정보를 볼 수 있습니다.",
                "",
                "도커 사용법에 대한 더 많은 자료는 다음 링크를 참고하세요: https://docs.docker.com/go/guides/"
        );
    }
}
